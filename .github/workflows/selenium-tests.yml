name: Selenium Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    strategy:
      matrix:
        browser: [chrome]
        java-version: [21]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Chrome
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@latest

    - name: Set up Firefox
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@latest

    - name: Install dependencies
      run: mvn dependency:resolve

    - name: Run smoke tests
      if: github.event_name == 'pull_request'
      run: |
        mvn clean test -Pci -DsuiteXmlFile=src/test/resources/config/testng-smoke.xml -Dbrowser=${{ matrix.browser }} -Dheadless=true
      env:
        MAVEN_OPTS: "-Xmx4g -Xms1g"
        BROWSER: ${{ matrix.browser }}
        HEADLESS: true
        ENVIRONMENT: dev

    - name: Run all tests
      if: github.event_name == 'push' || github.event_name == 'schedule'
      run: |
        mvn clean test -Pci -Dbrowser=${{ matrix.browser }} -Dheadless=true
      env:
        MAVEN_OPTS: "-Xmx4g -Xms1g"
        BROWSER: ${{ matrix.browser }}
        HEADLESS: true
        ENVIRONMENT: dev

    - name: Generate Allure Report
      run: mvn allure:report

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-java${{ matrix.java-version }}
        path: |
          target/surefire-reports/
          target/allure-results/
          target/reports/
          target/screenshots/

    - name: Upload Allure results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-${{ matrix.browser }}-java${{ matrix.java-version }}
        path: target/allure-results/

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results (${{ matrix.browser }}, Java ${{ matrix.java-version }})
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  performance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Run performance tests
      run: |
        mvn clean test -Pci -DsuiteXmlFile=src/test/resources/config/testng-performance.xml -Dheadless=true
      env:
        MAVEN_OPTS: "-Xmx4g -Xms1g"
        BROWSER: chrome
        HEADLESS: true
        ENVIRONMENT: staging